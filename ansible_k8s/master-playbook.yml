---
- hosts: all
  become: true
  tasks:
  - name: Instalar os pacotes e permite apt usar HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - software-properties-common

  - name: Adicionar uma chave apt assinada para o Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    become: true

  - name: Adicionar repositório apt para uma versão estável
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present
    
  - name: Instalar docker e suas dependências
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    notify:
      - docker status

  - name: Adicionar usuário vagrant para o grupo do docker
    user:
      name: vagrant
      group: docker

  - name: Remove o arquivo swap do /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Desabilita o swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Adicionar uma chave apt assinada para o kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adicionando um repositório apt para o Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Instalar os binários do Kubernetes
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet=1.21.1-00
        - kubeadm=1.21.1-00
        - kubectl=1.21.1-00

  - name: Configura IP do nó (node)
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
      create: yes

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Inicializar o kubernetes usando o kubeadm
    command: kubeadm init --apiserver-advertise-address="10.11.12.10" --apiserver-cert-extra-sans="10.11.12.10"  --node-name k8s-budapest-0000 --pod-network-cidr=10.123.0.0/16

  - name: Configura kubeconfig para o usuário vagrant
    command: "{{ item }}"
    with_items:
      - mkdir -p /home/vagrant/.kube
      - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
      - chown vagrant:vagrant /home/vagrant/.kube/config

  - name: Instalar provider de rede para pod calico
    become: false
    command: kubectl create -f https://docs.projectcalico.org/v3.9/manifests/calico.yaml

  - name: Checar se join token foi existe
    stat:
      path: /ansible_k8s/join_command
    register: join_command_exists

  - name: Criar comando com token para ingressar node ao cluster
    command: kubeadm token create --print-join-command
    register: join_command
    when: join_command_exists.stat.exists == False

  - name: Copiar join para arquivo local
    become: false
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

  handlers:
    - name: docker status
      service: name=docker state=started
